<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables de juego
stateGame = "play";
score = 0;
levelGame = 1;
numberDinos = 2;
counterDinos = 0

global.life = 3;
global.shoots = 3;

//Variables para game over
option = 1;//&lt;&lt; 1=Reload  2=Exit
posY = 290;//Posicion para game over
selectorY = posY;

//Array de posiciones para dinos en el eje X
arrPos[0] = 128;//+96
arrPos[1] = 224;//+64
arrPos[2] = 288;//+64
arrPos[3] = 352;//+96
arrPos[4] = 448;

dinoPosY = choose(-80,-180,-280,-380);

//audio_play_sound( DinoPongSong,0,true);
audio_sound_gain(audio_play_sound( DinoPongSong2,1,true),1,0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Crea dinos y ball
//for (i=levelGame; i&lt;levelGame; i+=1)
//{
    //instance_create(300,-80,o_dino);
//};
//Crea posiciones random para dinos
randomize();
randPos = floor( random(5));
//show_debug_message(string(randPos));

if( stateGame == "play"){
    //Crea dinos
    if (instance_number( o_dino) &lt; numberDinos){
        //instance_create(random_range(100, room_width-100),-80,o_dino);
        instance_create(arrPos[randPos], dinoPosY,o_dino);
    }
    
    //Contador de disparos
    if( !instance_number( o_turtleBall) &amp;&amp; global.shoots &gt; 0){
        instance_create(o_rocky.x,o_rocky.y - 25, o_turtleBall);
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Game Over
if( global.life &lt;=0 || global.shoots == 0){
    stateGame = "gameOver";
    with( o_rocky) instance_destroy();
    with( o_turtleBall) instance_destroy();
    with( o_pause) instance_destroy();
    
    //Menu game over
    if( keyboard_check_pressed( vk_down) &amp;&amp; option == 1){
        option++;
        selectorY = posY + 70;
    }
    if( keyboard_check_pressed( vk_up) &amp;&amp; option == 2){
        option--;
        selectorY = posY;
    }
    
    if( keyboard_check_pressed( vk_enter)){
        if( option == 1){
            game_restart();
            audio_stop_all();
        }
        else{
            game_end();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Control level
if(levelGame ==1 &amp;&amp; counterDinos &gt;= 10){
    levelGame++;
    numberDinos++;
}else
if(levelGame ==2 &amp;&amp; counterDinos &gt;= 20){
    levelGame++;
    numberDinos++;
}else
if(levelGame ==3 &amp;&amp; counterDinos &gt;= 30){
    levelGame++;
    numberDinos++;
}else
if(levelGame ==4 &amp;&amp; counterDinos &gt;= 40){
    levelGame++;
    numberDinos++;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reproduce sonido de fondo
//if (!audio_music_is_playing()){
//    audio_play_music(DinoPongSong,true );
//}

//if !audio_is_playing(DinoPongSong2){
 //   audio_sound_gain(audio_play_sound( DinoPongSong2,0,true),1,0)
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HUD
draw_set_font(f_game);
draw_set_halign( fa_left)
draw_set_color(c_orange );
draw_sprite( spr_Rocky_icon ,0, 20, 20);
draw_text(40,20,"x " + string( global.life));
draw_text(10,40,"Level " + string(levelGame));



draw_sprite( spr_score,1, room_width/2-10, 30);
draw_set_color( c_white);
draw_text( room_width/2 + 45 ,20, string(score));

draw_sprite( spr_turtleBall,0, room_width - 70, 30);
draw_set_color( c_orange);
draw_text( room_width - 50 ,20, "x "+ string(global.shoots));


//TEST
/*
if instance_exists( o_rocky)
    draw_text(20,80, "Estado ball: "+ o_turtleBall.stateBall);
    draw_text(20,100, "Numero de instancias: "+ string( instance_number( o_rockyShock)));
    draw_text(10,60,"Dinos " + string(counterDinos));
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw game over
if( stateGame == "gameOver"){
    draw_sprite( spr_gameOver,0, room_width/2,300);
    draw_rectangle_color(200,selectorY,410,selectorY + 40,c_white,c_white,c_white,c_white,1);
    draw_rectangle(200,selectorY,410,selectorY + 40,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
